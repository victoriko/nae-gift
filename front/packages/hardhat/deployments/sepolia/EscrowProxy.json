{
  "address": "0xfd2aB077a1551Ee9bfd1969a8004baA5a0546b3C",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_escrowImplementation",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "escrowImplementationUpdated",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "escrowImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestEscrow",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newescrowImplementation",
          "type": "address"
        }
      ],
      "name": "updateescrowImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x02aa5bddd47919fa912de727aa8b47916524b0f4550d938f985cd4078b617733",
  "receipt": {
    "to": null,
    "from": "0x3C51F308502c5fde8c7C1Fa39d35aA621838F7DF",
    "contractAddress": "0xfd2aB077a1551Ee9bfd1969a8004baA5a0546b3C",
    "transactionIndex": 95,
    "gasUsed": "198774",
    "logsBloom": "0x
    "blockHash": "0xdf6d28c94a1825b98f2b049764588a1c4982506aecc6fe7a54ed68b11b5cf2a6",
    "transactionHash": "0x02aa5bddd47919fa912de727aa8b47916524b0f4550d938f985cd4078b617733",
    "logs": [
      {
        "transactionIndex": 95,
        "blockNumber": 5594920,
        "transactionHash": "0x02aa5bddd47919fa912de727aa8b47916524b0f4550d938f985cd4078b617733",
        "address": "0xfd2aB077a1551Ee9bfd1969a8004baA5a0546b3C",
        "topics": [
          "0xe2b4f4f808232380bd1584a7a88e8543e449bd76363a1b66bca68bab031fffa3"
        ],
        "data": "0x0000000000000000000000002d789b269194ad36cc350c6954126f25579556f2",
        "logIndex": 2107,
        "blockHash": "0xdf6d28c94a1825b98f2b049764588a1c4982506aecc6fe7a54ed68b11b5cf2a6"
      }
    ],
    "blockNumber": 5594920,
    "cumulativeGasUsed": "26339066",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x2D789b269194AD36cC350c6954126F25579556F2"
  ],
  "numDeployments": 2,
  "solcInputHash": "b8dda65f58ddd919319e68aaaed906b7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_escrowImplementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"escrowImplementationUpdated\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"escrowImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestEscrow\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newescrowImplementation\",\"type\":\"address\"}],\"name\":\"updateescrowImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EscrowProxy.sol\":\"EscrowProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Escrow.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\ncontract Escrow {\\r\\n    enum ContractStateChoices {\\r\\n        ACTIVE,\\r\\n        FULFILLED,\\r\\n        EXECUTED\\r\\n    }\\r\\n\\r\\n    struct EscrowData {\\r\\n        address buyer;\\r\\n        address seller;\\r\\n        address receiver;\\r\\n        address market;\\r\\n        uint256 contractPrice;\\r\\n        ContractStateChoices state;\\r\\n    }\\r\\n\\r\\n    mapping(string => EscrowData) public escrows;\\r\\n\\r\\n    event EscrowCreated(string uuid);\\r\\n    event FulfillmentConfirmed(string uuid, address indexed market);\\r\\n    event ProductUsedConfirmed(string uuid, address indexed receiver);\\r\\n    event FundsDistributed(string uuid, address indexed market, uint256 marketShare, address indexed seller, uint256 sellerShare);\\r\\n\\r\\n    function createEscrow(\\r\\n        string memory uuid,\\r\\n        address _buyer,\\r\\n        address _seller,\\r\\n        address _receiver,\\r\\n        address _market,\\r\\n        uint256 _contractPrice\\r\\n    ) public payable {\\r\\n        require(msg.value >= _contractPrice, \\\"e002\\\");\\r\\n        require(msg.sender == _buyer, \\\"e003\\\");\\r\\n        require(escrows[uuid].buyer == address(0), \\\"Escrow already exists\\\");\\r\\n\\r\\n        escrows[uuid] = EscrowData({\\r\\n            buyer: _buyer,\\r\\n            seller: _seller,\\r\\n            receiver: _receiver,\\r\\n            market: _market,\\r\\n            contractPrice: _contractPrice,\\r\\n            state: ContractStateChoices.ACTIVE\\r\\n        });\\r\\n\\r\\n        emit EscrowCreated(uuid);\\r\\n    }\\r\\n\\r\\n    function confirmFulfillment(string memory uuid) external {\\r\\n        require(msg.sender == escrows[uuid].market, \\\"e024\\\");\\r\\n        require(escrows[uuid].state == ContractStateChoices.ACTIVE, \\\"e013\\\");\\r\\n        escrows[uuid].state = ContractStateChoices.FULFILLED;\\r\\n        emit FulfillmentConfirmed(uuid, escrows[uuid].receiver);\\r\\n    }\\r\\n\\r\\n    function confirmProductUsed(string memory uuid) external {\\r\\n        require(msg.sender == escrows[uuid].market, \\\"e020\\\");\\r\\n        require(escrows[uuid].state == ContractStateChoices.FULFILLED, \\\"e021\\\");\\r\\n        escrows[uuid].state = ContractStateChoices.EXECUTED;\\r\\n        emit ProductUsedConfirmed(uuid, escrows[uuid].market);\\r\\n        distributeFunds(uuid);\\r\\n    }\\r\\n\\r\\n    function distributeFunds(string memory uuid) private {\\r\\n        require(escrows[uuid].state == ContractStateChoices.EXECUTED, \\\"e022\\\");\\r\\n        EscrowData storage escrow = escrows[uuid];\\r\\n        uint256 marketShare = escrow.contractPrice / 10;\\r\\n        uint256 sellerShare = escrow.contractPrice - marketShare;\\r\\n        payable(escrow.market).transfer(marketShare);\\r\\n        payable(escrow.seller).transfer(sellerShare);\\r\\n        emit FundsDistributed(uuid, escrow.market, marketShare, escrow.seller, sellerShare);\\r\\n    }\\r\\n\\r\\n    function escrowStatus(string memory uuid) external view returns(ContractStateChoices) {\\r\\n        return escrows[uuid].state;\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n}\",\"keccak256\":\"0x53c379625c482adba3cc1771404727fdaf4a95752da157fd39576165ab82e2f2\",\"license\":\"MIT\"},\"contracts/EscrowProxy.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"./Escrow.sol\\\";\\r\\n\\r\\ncontract EscrowProxy {\\r\\n    address public latestEscrow;\\r\\n    address public escrowImplementation;\\r\\n\\r\\n    event escrowImplementationUpdated(address newImplementation);\\r\\n\\r\\n    constructor(address _escrowImplementation) {\\r\\n        updateescrowImplementation(_escrowImplementation);\\r\\n    }\\r\\n\\r\\n    function updateescrowImplementation(address _newescrowImplementation) public {\\r\\n        escrowImplementation = _newescrowImplementation;\\r\\n        emit escrowImplementationUpdated(_newescrowImplementation);\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        _delegate(escrowImplementation);\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        _delegate(escrowImplementation);\\r\\n    }\\r\\n\\r\\n    function _delegate(address _implementation) internal {\\r\\n        require(_implementation != address(0), \\\"Implementation address is not set\\\");\\r\\n        assembly {\\r\\n            calldatacopy(0, 0, calldatasize())\\r\\n\\r\\n            let result := delegatecall(gas(), _implementation, 0, calldatasize(), 0, 0)\\r\\n\\r\\n            returndatacopy(0, 0, returndatasize())\\r\\n\\r\\n            switch result\\r\\n            case 0 { revert(0, returndatasize()) }\\r\\n            default { return(0, returndatasize()) }\\r\\n        }\\r\\n    }\\r\\n}\",\"keccak256\":\"0x074509b14ae6f93e615a4b60127ff5d5513d06e0a0e568e7fedb37e861f3abe1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516102f83803806102f883398101604081905261002f91610092565b6100388161003e565b506100c2565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527fe2b4f4f808232380bd1584a7a88e8543e449bd76363a1b66bca68bab031fffa39060200160405180910390a150565b6000602082840312156100a457600080fd5b81516001600160a01b03811681146100bb57600080fd5b9392505050565b610227806100d16000396000f3fe6080604052600436106100385760003560e01c80634ca8ff5a146100695780639f0833d8146100a5578063c14c5fc1146100c557610054565b3661005457600154610052906001600160a01b03166100e5565b005b600154610052906001600160a01b03166100e5565b34801561007557600080fd5b50600154610089906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100b157600080fd5b50600054610089906001600160a01b031681565b3480156100d157600080fd5b506100526100e03660046101c1565b61016d565b6001600160a01b0381166101495760405162461bcd60e51b815260206004820152602160248201527f496d706c656d656e746174696f6e2061646472657373206973206e6f742073656044820152601d60fa1b606482015260840160405180910390fd5b3660008037600080366000845af43d6000803e808015610168573d6000f35b3d6000fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527fe2b4f4f808232380bd1584a7a88e8543e449bd76363a1b66bca68bab031fffa39060200160405180910390a150565b6000602082840312156101d357600080fd5b81356001600160a01b03811681146101ea57600080fd5b939250505056fea2646970667358221220a370d0b49e25526538156ffe746a395a15c1cb814ea68b832fa11fa1022cdd8b64736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106100385760003560e01c80634ca8ff5a146100695780639f0833d8146100a5578063c14c5fc1146100c557610054565b3661005457600154610052906001600160a01b03166100e5565b005b600154610052906001600160a01b03166100e5565b34801561007557600080fd5b50600154610089906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100b157600080fd5b50600054610089906001600160a01b031681565b3480156100d157600080fd5b506100526100e03660046101c1565b61016d565b6001600160a01b0381166101495760405162461bcd60e51b815260206004820152602160248201527f496d706c656d656e746174696f6e2061646472657373206973206e6f742073656044820152601d60fa1b606482015260840160405180910390fd5b3660008037600080366000845af43d6000803e808015610168573d6000f35b3d6000fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527fe2b4f4f808232380bd1584a7a88e8543e449bd76363a1b66bca68bab031fffa39060200160405180910390a150565b6000602082840312156101d357600080fd5b81356001600160a01b03811681146101ea57600080fd5b939250505056fea2646970667358221220a370d0b49e25526538156ffe746a395a15c1cb814ea68b832fa11fa1022cdd8b64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 297,
        "contract": "contracts/EscrowProxy.sol:EscrowProxy",
        "label": "latestEscrow",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 299,
        "contract": "contracts/EscrowProxy.sol:EscrowProxy",
        "label": "escrowImplementation",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}